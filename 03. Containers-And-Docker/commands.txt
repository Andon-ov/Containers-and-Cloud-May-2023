1.NGINX Server Container

docker pull nginxdemos/hello 
 -> Pull the NGINX image
 
docker images
 -> View Docker images

docker run nginxdemos/hello  
 -> Run NGINX container

docker run -p 5000:80 nginxdemos/hello  
 -> Run NGINX container and map port 5000:80

docker rm 0822be8f501f 
 -> Remove a container

docker run -p 5000:80 --name code_it_up nginxdemos/hello  
 -> Run NGINX container with a specific name

docker ps -a
 -> List all containers (including stopped ones)

docker rm 77aa4a86141a
 -> Remove a container forcefully

docker run -d -p 5000:80 --name code_it_up nginxdemos/hello 
 -> Run NGINX container in detached mode

docker logs 28961315f461a6e8a46d08664ccf63ee6fb42f33eae0158c08ec3d482bc9432d
 -> View logs of a container

docker logs code_it_up
 -> View logs of a container

docker logs 28
 -> View logs of a container

docker rm code_it_up -f
 -> Remove a container by name

docker rmi nginxdemos/hello
 -> Remove the NGINX image

docker images
 -> View Docker images


Vue.js App in Container:

 mkdir MyWebsite 
 -> Create a directory

 cd MyWebsite/
  -> and navigate to it: 

 sudo npm i -g @vue/cli-init
 -> Install Vue CLI

 sudo vue init browserify .
 -> Initialize a Vue.js project

 sudo npm install
 -> Install project dependencies

 docker pull node:16
 -> Pull the Node.js 16 image

 sudo npm run dev
 -> Run the Vue.js app in development mode

 code package.json
 -> Edit the package.json file 
 
 sudo docker run -it -p 8080:8080 -v $(pwd):/app -w /app node:16 npm run serve
 -> Run the Vue.js app in a Docker container

3. MongoDB in Container

docker pull mongo

docker run \
-p 27017:27017 \
-v ${PWD}/data:/etc/mongo \
-d \
-e MONGO_INITDB_ROOT_USERNAME=mongoadmin \
-e MONGO_INITDB_ROOT_PASSWORD=mongoadminpass \
mongo 

"docker run -> starts a new Docker container;
-p 27017:27017 -> sets the external and internal ports to 27017, so that we can access the MongoDB from outside the container;
-v ${PWD}/data:/etc/mongo
${PWD} -> the host directory;
/etc/mongo -> the container directory;
-d -> runs the container in detached mode (it will run in the background);
-e MONGO_INITDB_ROOT_USERNAME=mongoadmin -> sets the admin username;
-e MONGO_INITDB_ROOT_PASSWORD=mongoadminpass -> sets the admin password;
mongo -> specifies the image"


